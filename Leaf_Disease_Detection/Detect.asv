% Project Title: Leaf Disease Detection

clc
close all 
clear all

%select either dataset or webcam
prompt = 'webcam input?';
x = input(prompt)
if x == 1
   %select image from webcam
    cam = webcam(1);
    preview(cam)
    mytxt = uicontrol('Style','text','String','Snap!');
    mytxt.Enable = 'Inactive';
    mytxt.ButtonDownFcn = '';
    %w = input('take snapshot?');
    b = input('click');
    if b == true
        img = snapshot(cam);
    else
        disp('enter for snap'); 
    end
    I = (img);
    closePreview(cam);
    clear('cam');
else
    %select image from the dataset
    [filename, pathname] = uigetfile({'*.*';'*.bmp';'*.jpg';'*.gif'}, 'Pick a Leaf Image File');
    I = imread([pathname,filename]);
end

I = imresize(I,[256,256]);
figure, imshow(I); 
title('Input Leaf Image');

%image preprocessing
% Enhance Contrast
I = imadjust(I,stretchlim(I));
figure, imshow(I);
title('Contrast Enhanced');

%% Extract Features

% Function call to evaluate features
[feat_disease seg_img] =  EvaluateFeatures(I);


% Load All The Features
load('Train_Data80.mat')

% Put the test features into variable 'test'
test = feat_disease;
result = multisvm(Train_Feat,Train_Label,test);
%disp(result);

% Visualize Results
if result == 0  
    helpdlg(' Alternaria Alternata ');
    disp(' Alternaria Alternata ');
elseif result == 1
    helpdlg(' Anthracnose ');
    disp('Anthracnose');
elseif result == 2
    helpdlg(' Bacterial Blight ');
    disp(' Bacterial Blight ');
elseif result == 3
    helpdlg(' Cercospora Leaf Spot ');
    disp('Cercospora Leaf Spot');
elseif result == 4
    helpdlg(' Healthy Leaf ');
    disp('Healthy Leaf ');
end

%% Evaluate Accuracy
%  load('Accuracy_Data.mat')
%  
%  d = pdist2(Train_Feat, Test_Feat);
%  
%  for j = 1:K
%      [Value, Index] = min(d);
%         for i = 1:125
%          predict(j, i) = Train_Label(Index(:, i));
%      end
%     
%  end
%  predict_mat = mode(predict, 1);
%  
%  confusion = confusionmat(test_gs, predict_mat)
%  
%  accuracy = (trace(confusion))/(sum(sum(confusion)))


%  Accuracy_Percent= zeros(200,1);
%  for i = 1:500
%  data = Train_Feat;
%  %groups = ismember(Train_Label,1);
%  groups = ismember(Train_Label,0);
%  [train,test] = crossvalind('HoldOut',groups);
%  cp = classperf(groups);
%  svmStruct = svmtrain(data(train,:),groups(train),'showplot',false,'kernel_function','linear');
%  classes = svmclassify(svmStruct,data(test,:),'showplot',false);
%  classperf(cp,classes,test);
%  Accuracy = cp.CorrectRate;
%  Accuracy_Percent(i) = Accuracy.*100;
%  end
%  Max_Accuracy = max(Accuracy_Percent);
%  sprintf('Accuracy of Linear Kernel with 500 iterations is: %g%%',Max_Accuracy)